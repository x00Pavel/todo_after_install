{
	// Place your snippets for c here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Els": {
		"prefix": ["el", "els", "else"],
		"body": ["else", "{",
				"    $1",
				"}"
		],
		"description": "Code snippet for else"
	},
	"Else IF": {
		"prefix": ["else i", " el if"],
		"body": ["else if ($1){",
				"    $2",
				"}"
		],
		"description": "Snippet for else if"
	},
	"If":{
		"prefix": "if",
		"body": ["if (${1:/*statement*/}){",
				"    ${2:/*body*/}",
				"}"
		],
		"description": "Snippet for IS statement"
	},
	"While": {
		"prefix": ["whi", "wh", "while"],
		"body": ["while (${1:/*statement*/}){",
				"    ${2:/*body*/}",
				"}"
		],
		"description": "Snippet for while loop"
	},
	"For": {
		"prefix": ["fo", "for"],
		"body": ["for (int i = $1; i < $2 ; i++){",
				"    $0",
				"}"
		],
		"description": "Snippet for 'for' loop"
	},

	"Typedef struct": {
		"prefix": ["def str", "def st", "def stru", "def struc","def struct"],
		"body": "typedef struct ${1:/*struct name*/} ${2:/*name*/};",
		"description": "Snippet for typedef struct"
	},
	"Struct": {
		"prefix": ["str", "stru", "struct"],
		"body": ["struct ${1:/*name*/}{",
				"    ${2:/*body*/}",
				"}"	
		]
	}
}